stages:
    #    - test
    - build
    - deplo


build.stage:
    stage: build
    image: maven:3-jdk-8
    script:
        - ./mvnw clean package -DskipTests=true -Pstage
    artifacts:
        paths:
            - target/app.war
    only:
        - master
    tags:
        - docker
    variables:
        MAVEN_OPTS: "-Dmaven.repo.local=.m2"
    cache:
        key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME"
        paths:
            - .m2/

build.prod:
    stage: build
    image: maven:3-jdk-8
    script:
        - ./mvnw clean package -DskipTests=true -Pprod
    artifacts:
        paths:
            - target/app.war
    only:
        - production
    tags:
        - docker
    variables:
        MAVEN_OPTS: "-Dmaven.repo.local=.m2"
    cache:
        key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME"
        paths:
            - .m2/



#
##test:
##    stage: test
##    script:
##        - docker-compose -f docker-compose-ci.yml down
##        - docker-compose -f docker-compose-ci.yml up -d --build --force  --remove-orphans
##        - mvn sonar:sonar \
##            -Dsonar.host.url=http://sonar.etd24.pl \
##            -Dsonar.login=d893d5df7c45821afa468e72281c229ba2d71358
##    coverage: "/Total.*?([0-9]{1,3})%/"
##    tags:
##        - Docker in docker
#
#build:
#    stage: build
#    script:
#        - docker-compose -f docker-compose-ci.yml down
#        - docker-compose -f docker-compose-ci.yml up -d --build --force  --remove-orphans
#        - docker-compose -f docker-compose-ci.yml ps
#    tags:
#        - Docker in docker


stage:
    stage: deplo
    script:
        - ls -al
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - mkdir -p ~/.ssh
        - eval $(ssh-agent -s)
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
        - ssh-add <(echo "$DEPLOYMENT_KEY")
#        - ssh ptheis@pulsrynkufx2.etd24.pl "mysqldump -uptheis -pWyMjjsXeBr fx | mysql -uptheis -pWyMjjsXeBr stage && exit"
#        - ssh ptheis@pulsrynkufx2.etd24.pl "mkdir -p /home/api/stage/upload-dir && exit"
#        - ssh ptheis@pulsrynkufx2.etd24.pl "cp -a /home/api/prod/upload-dir/. /home/api/stage/upload-dir/ | true && exit"
        - scp target/app.war ptheis@pulsrynkufx2.etd24.pl:/home/api/stage
        - ssh ptheis@pulsrynkufx2.etd24.pl "sudo systemctl restart fx-stage && exit"
    only:
        - master
    when: manual
    tags:
        - docker
    environment:
        name: staging
        url: https://dev-pulsrynkufx2.etd24.pl
    dependencies:
        - build.stage

prod:
    stage: deplo
    script:
        - ls -al
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - mkdir -p ~/.ssh
        - eval $(ssh-agent -s)
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
        - ssh-add <(echo "$DEPLOYMENT_KEY")
        - ssh ptheis@pulsrynkufx2.etd24.pl "mkdir -p /home/api/prod/upload-dir && exit"
        - scp target/app.war ptheis@pulsrynkufx2.etd24.pl:/home/api/prod
        - ssh ptheis@pulsrynkufx2.etd24.pl "sudo systemctl restart fx-prod && exit"
    only:
        - production
    when: manual
    tags:
        - docker
    environment:
        name: production
        url: https://pulsrynkufx2.etd24.pl
    dependencies:
        - build.prod